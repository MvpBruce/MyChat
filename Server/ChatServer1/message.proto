syntax = "proto3";

package message;


/*VerifyService*/
service VerifyService {
	rpc GetVerifyCode(GetVerifyReq) returns (GetVerifyRsp) {}
}

message GetVerifyReq {
	string email = 1;
}

message GetVerifyRsp {
	int32 error = 1;
	string email = 2;
	string code = 3;
}

/*StatusService*/
message GetChatServerReq {
	int32 uid = 1;
}

message GetChatServerRsp {
	int32 error = 1;
	string host = 2;
	string port = 3;
	string token = 4;
}

message LoginReq {
	int32 uid = 1;
	string token = 2;
}

message LoginRsp {
	int32 error = 1;
	int32 uid = 2;
	string token =3;
}

service StatusService {
	rpc GetChatServer(GetChatServerReq) returns (GetChatServerRsp) {}
	rpc Login(LoginReq) returns (LoginRsp) {}
}

/*ChatService*/
message AddFriendReq {
	int32 applyuid = 1;
	int32 touid = 2;
	string name = 3;
	string desc = 4;
	string icon = 5;
	string nick = 6;
	int32 gender = 7;
}

message AddFriendRsp {
	int32 error = 1;
	int32 applyuid = 2;
	int32 touid = 3;
}

message SendChatMsgReq {
	int32 fromuid = 1;
	int32 touid = 2;
	string message = 3;
}

message SendChatMsgRsp {
	int32 error = 1;
	int32 fromuid = 2;
	int32 token = 3;
}

message AuthFriendReq {
	int32 fromuid = 1;
	int32 touid = 2;
}

message AuthFriendRsp {
	int32 error = 1;
	int32 fromuid = 2;
	int32 touid = 3;
}

message ChatTextMsgReq {
	int32 fromuid = 1;
	int32 touid = 2;
	repeated ChatTextData textmsgs = 3;
}

message ChatTextData {
	string msgid = 1;
	string msgcontent = 2;
}

message ChatTextMsgRsp {
	int32 error = 1;
	int32 fromuid = 2;
	int32 touid = 3;
	repeated ChatTextData textmsgs = 4;
}

service ChatService {
	rpc NotifyAddFriend(AddFriendReq) returns (AddFriendRsp) {}
	rpc SendChatMsg(SendChatMsgReq) returns (SendChatMsgRsp) {}
	rpc NotifyAuthFriend(AuthFriendReq) returns (AuthFriendRsp) {}
	rpc NotifyChatTextMsg(ChatTextMsgReq) returns (ChatTextMsgRsp) {}
}